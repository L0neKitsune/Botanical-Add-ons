buildscript {
    ext.kotlin_version = '1.0.0-beta-4589'
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

repositories {
    maven {
        name = "chickenbones"
        url = "http://chickenbones.net/maven/"
    }
    mavenCentral()
}

apply plugin: 'idea'
apply plugin: 'forge'
apply plugin: 'kotlin'
apply plugin: 'curseforge'

ext.configFile = file('build.properties')

ext.config = parseConfig(configFile)

version = "${config.version}-${config.build_number}"
group= "ninja.shadowfox.shadowfox_botany" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = config.mod_name
logging.level = LogLevel.DEBUG

configurations {

    required
    compile.extendsFrom(required)
}

minecraft {
    runDir = "eclipse"
    version = "${config.mc_version}-${config.forge_version}"
}

dependencies {
    compile "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.4.29:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.3.74:dev"

    // Make sure kotlin files are marked as required so we don't miss them.
    required "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

jar {

    // We need to make sure we package kotlin runtimes.

    archiveName "BotanicalAddons-${version}.jar"
    dependsOn configurations.compile
    from {
        configurations.required.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

task dependencies << {
        configurations.jarInclude.each {
            dep -> println(dep.name)
    }
}

task deobfJar(type: Jar) {
    from(sourceSets.main.output)
    archiveName = "BotanicalAddons-${version}-deobf.jar"
}

artifacts {
    archives deobfJar
}

processResources {
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info', '**/psd/**'
    }
}

def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}

idea { module { inheritOutputDirs = true } }
sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}
